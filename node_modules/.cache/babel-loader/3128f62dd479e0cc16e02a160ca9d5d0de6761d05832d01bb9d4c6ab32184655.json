{"ast":null,"code":"import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nexport default {\n  name: 'PaginationComponent',\n  data() {\n    return {\n      currentPage: {\n        type: Number,\n        default: 1\n      },\n      currentPageData: []\n    };\n  },\n  methods: {\n    onPageChange(page) {\n      console.log(\"page changed\");\n      this.currentPage = page;\n      this.currentPageData = this.listItems.slice((page - 1) * this.perPage, page * this.perPage);\n    },\n    savePDF() {\n      const pdf = new jsPDF();\n      pdf.autoTable({\n        head: [this.fields.map(field => field.label)],\n        body: this.currentPageData.map(item => this.fields.map(field => item[field.key]))\n      });\n      pdf.save(`page-${this.currentPage}.pdf`);\n    }\n  },\n  props: {\n    recordsPerPage: {\n      type: Number,\n      default: 10\n    },\n    totalPages: {\n      type: Number,\n      default: 0\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    fields: {\n      type: [],\n      required: true\n    },\n    perPage: {\n      type: Number,\n      default: 10\n    },\n    listItems: {\n      type: [],\n      required: true,\n      default: []\n    }\n  },\n  watch: {\n    currentPage: {\n      handler: function (value) {\n        val = parseInt(value);\n        this.currentPage = val;\n        this.currentPageData = this.listItems.slice((value - 1) * this.perPage, value * this.perPage);\n        this.$emit(\"pageNo\", value);\n      }\n    }\n  }\n};","map":{"version":3,"names":["jsPDF","name","data","currentPage","type","Number","default","currentPageData","methods","onPageChange","page","console","log","listItems","slice","perPage","savePDF","pdf","autoTable","head","fields","map","field","label","body","item","key","save","props","recordsPerPage","totalPages","isLoading","Boolean","required","watch","handler","value","val","parseInt","$emit"],"sources":["/Users/jaisri/Downloads/attendance-portal-master/src/components/js/pagination.js"],"sourcesContent":["import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nexport default{\n    name:'PaginationComponent',\n    data(){\n        return {\n            currentPage:{\n                type:Number,\n                default:1\n            },\n            currentPageData: []\n        }\n    },\n    methods:{\n        onPageChange(page) {\n            console.log(\"page changed\")\n            this.currentPage = page\n            this.currentPageData = this.listItems.slice((page - 1) * this.perPage, page * this.perPage)\n          },\n          savePDF() {\n            const pdf = new jsPDF()\n            pdf.autoTable({\n              head: [this.fields.map(field => field.label)],\n              body: this.currentPageData.map(item => this.fields.map(field => item[field.key]))\n            })\n\n            pdf.save(`page-${this.currentPage}.pdf`)\n\n          }\n        },\n    props:{\n        recordsPerPage:{\n            type:Number,\n            default:10\n        },\n        totalPages:{\n            type:Number,\n            default:0\n        },\n        isLoading:{\n            type:Boolean,\n            default:false\n        },\n        fields:{\n            type:[],\n            required:true\n        },\n        perPage:{\n            type:Number,\n            default:10\n        },\n        listItems:{\n            type:[],\n            required:true,\n            default:[]\n        }\n    },\n    watch: {\n        currentPage: {\n          handler: function (value) {\n            val=parseInt(value)\n            this.currentPage = val\n            this.currentPageData = this.listItems.slice((value - 1) * this.perPage, value * this.perPage)\n        \n            this.$emit(\"pageNo\",value)\n          },\n        },\n    }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAExB,eAAc;EACVC,IAAI,EAAC,qBAAqB;EAC1BC,IAAI,GAAE;IACF,OAAO;MACHC,WAAW,EAAC;QACRC,IAAI,EAACC,MAAM;QACXC,OAAO,EAAC;MACZ,CAAC;MACDC,eAAe,EAAE;IACrB,CAAC;EACL,CAAC;EACDC,OAAO,EAAC;IACJC,YAAY,CAACC,IAAI,EAAE;MACfC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B,IAAI,CAACT,WAAW,GAAGO,IAAI;MACvB,IAAI,CAACH,eAAe,GAAG,IAAI,CAACM,SAAS,CAACC,KAAK,CAAC,CAACJ,IAAI,GAAG,CAAC,IAAI,IAAI,CAACK,OAAO,EAAEL,IAAI,GAAG,IAAI,CAACK,OAAO,CAAC;IAC7F,CAAC;IACDC,OAAO,GAAG;MACR,MAAMC,GAAG,GAAG,IAAIjB,KAAK,EAAE;MACvBiB,GAAG,CAACC,SAAS,CAAC;QACZC,IAAI,EAAE,CAAC,IAAI,CAACC,MAAM,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC,CAAC;QAC7CC,IAAI,EAAE,IAAI,CAACjB,eAAe,CAACc,GAAG,CAACI,IAAI,IAAI,IAAI,CAACL,MAAM,CAACC,GAAG,CAACC,KAAK,IAAIG,IAAI,CAACH,KAAK,CAACI,GAAG,CAAC,CAAC;MAClF,CAAC,CAAC;MAEFT,GAAG,CAACU,IAAI,CAAE,QAAO,IAAI,CAACxB,WAAY,MAAK,CAAC;IAE1C;EACF,CAAC;EACLyB,KAAK,EAAC;IACFC,cAAc,EAAC;MACXzB,IAAI,EAACC,MAAM;MACXC,OAAO,EAAC;IACZ,CAAC;IACDwB,UAAU,EAAC;MACP1B,IAAI,EAACC,MAAM;MACXC,OAAO,EAAC;IACZ,CAAC;IACDyB,SAAS,EAAC;MACN3B,IAAI,EAAC4B,OAAO;MACZ1B,OAAO,EAAC;IACZ,CAAC;IACDc,MAAM,EAAC;MACHhB,IAAI,EAAC,EAAE;MACP6B,QAAQ,EAAC;IACb,CAAC;IACDlB,OAAO,EAAC;MACJX,IAAI,EAACC,MAAM;MACXC,OAAO,EAAC;IACZ,CAAC;IACDO,SAAS,EAAC;MACNT,IAAI,EAAC,EAAE;MACP6B,QAAQ,EAAC,IAAI;MACb3B,OAAO,EAAC;IACZ;EACJ,CAAC;EACD4B,KAAK,EAAE;IACH/B,WAAW,EAAE;MACXgC,OAAO,EAAE,UAAUC,KAAK,EAAE;QACxBC,GAAG,GAACC,QAAQ,CAACF,KAAK,CAAC;QACnB,IAAI,CAACjC,WAAW,GAAGkC,GAAG;QACtB,IAAI,CAAC9B,eAAe,GAAG,IAAI,CAACM,SAAS,CAACC,KAAK,CAAC,CAACsB,KAAK,GAAG,CAAC,IAAI,IAAI,CAACrB,OAAO,EAAEqB,KAAK,GAAG,IAAI,CAACrB,OAAO,CAAC;QAE7F,IAAI,CAACwB,KAAK,CAAC,QAAQ,EAACH,KAAK,CAAC;MAC5B;IACF;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}