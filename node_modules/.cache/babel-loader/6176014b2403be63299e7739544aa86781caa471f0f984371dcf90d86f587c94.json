{"ast":null,"code":"import HomePage from './pages/HomePage.vue';\nimport LoginComponent from './components/LoginComponent.vue';\nimport ApprovalRequestPage from './pages/ApprovalRequestPage.vue';\nimport SimulatorPage from './pages/SimulatorPage.vue';\nimport VueRouter from 'vue-router';\nconst routerconfig = new VueRouter({\n  mode: 'history',\n  routes: [{\n    path: '/home',\n    name: 'HomePage',\n    component: HomePage\n  }, {\n    path: '/',\n    name: 'LoginComponent',\n    component: LoginComponent\n  }, {\n    path: '/Approval',\n    name: 'ApprovalRequestPage',\n    component: ApprovalRequestPage\n  }, {\n    path: '/simulator',\n    name: 'SimulatorPage',\n    component: SimulatorPage,\n    meta: {\n      public: true\n    }\n  }]\n});\nrouterconfig.beforeEach((to, from, next) => {\n  // check if user is logged in\n  const isLoggedIn = localStorage.getItem('user');\n  if (to.matched.some(record => record.meta.public)) {\n    next();\n  } else if (to.path === '/' && isLoggedIn) {\n    next('/home');\n  } else if (to.path === '/home' && !isLoggedIn) {\n    next({\n      path: '/'\n    });\n  } else {\n    // $store.dispatch('authStore/')\n    next();\n  }\n});\nexport default routerconfig;","map":{"version":3,"names":["HomePage","LoginComponent","ApprovalRequestPage","SimulatorPage","VueRouter","routerconfig","mode","routes","path","name","component","meta","public","beforeEach","to","from","next","isLoggedIn","localStorage","getItem","matched","some","record"],"sources":["/Users/jaisri/Downloads/attendance-portal-master/src/router.js"],"sourcesContent":["import HomePage from './pages/HomePage.vue';\nimport LoginComponent from './components/LoginComponent.vue';\nimport ApprovalRequestPage from './pages/ApprovalRequestPage.vue';\nimport SimulatorPage from './pages/SimulatorPage.vue';\nimport VueRouter from 'vue-router';\n\nconst routerconfig=new VueRouter({\n    mode:'history',\n    routes:[ \n        {\n            path:'/home',\n            name:'HomePage',\n            component:HomePage,\n        },\n        {\n            path:'/',\n            name:'LoginComponent',\n            component:LoginComponent\n        },\n        {\n          path:'/Approval',\n          name:'ApprovalRequestPage',\n          component:ApprovalRequestPage\n      },\n      {\n        path: '/simulator',\n        name:'SimulatorPage',\n        component: SimulatorPage,\n        meta: { public: true }\n      }\n   ]\n})\n\n\n\n\nrouterconfig.beforeEach((to, from, next) => {\n    // check if user is logged in\n    const isLoggedIn = localStorage.getItem('user');  \n    \n    if(to.matched.some(record => record.meta.public))\n    {\n      next();\n    }\n    else if (to.path === '/' && isLoggedIn) {\n      next('/home');\n    } \n    else if(to.path === '/home' && !isLoggedIn){\n        next({ path: '/' });    \n    }\n    else {\n      // $store.dispatch('authStore/')\n      next();\n\n    }\n  });\n\nexport default routerconfig;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,mBAAmB,MAAM,iCAAiC;AACjE,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,YAAY,GAAC,IAAID,SAAS,CAAC;EAC7BE,IAAI,EAAC,SAAS;EACdC,MAAM,EAAC,CACH;IACIC,IAAI,EAAC,OAAO;IACZC,IAAI,EAAC,UAAU;IACfC,SAAS,EAACV;EACd,CAAC,EACD;IACIQ,IAAI,EAAC,GAAG;IACRC,IAAI,EAAC,gBAAgB;IACrBC,SAAS,EAACT;EACd,CAAC,EACD;IACEO,IAAI,EAAC,WAAW;IAChBC,IAAI,EAAC,qBAAqB;IAC1BC,SAAS,EAACR;EACd,CAAC,EACD;IACEM,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAC,eAAe;IACpBC,SAAS,EAAEP,aAAa;IACxBQ,IAAI,EAAE;MAAEC,MAAM,EAAE;IAAK;EACvB,CAAC;AAEP,CAAC,CAAC;AAKFP,YAAY,CAACQ,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACxC;EACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAE/C,IAAGL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACX,IAAI,CAACC,MAAM,CAAC,EAChD;IACEI,IAAI,EAAE;EACR,CAAC,MACI,IAAIF,EAAE,CAACN,IAAI,KAAK,GAAG,IAAIS,UAAU,EAAE;IACtCD,IAAI,CAAC,OAAO,CAAC;EACf,CAAC,MACI,IAAGF,EAAE,CAACN,IAAI,KAAK,OAAO,IAAI,CAACS,UAAU,EAAC;IACvCD,IAAI,CAAC;MAAER,IAAI,EAAE;IAAI,CAAC,CAAC;EACvB,CAAC,MACI;IACH;IACAQ,IAAI,EAAE;EAER;AACF,CAAC,CAAC;AAEJ,eAAeX,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}