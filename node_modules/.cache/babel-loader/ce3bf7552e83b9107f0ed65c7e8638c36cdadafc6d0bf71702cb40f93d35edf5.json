{"ast":null,"code":"import authService from \"@/serviceLayer/authService\";\nimport { mapActions, mapGetters } from \"vuex\";\nexport default {\n  name: 'Simulator',\n  data() {\n    return {\n      empCode: \"\",\n      checkIn: new Date(),\n      checkOut: new Date(),\n      setEmpcode: []\n    };\n  },\n  mounted() {\n    authService.getEmployees({\n      success: data => {\n        console.log(data);\n        this.setEmpcode = data;\n      },\n      fail: err => {\n        console.log(err);\n      }\n    });\n  },\n  computed: {\n    ...mapGetters('simulatorStore', ['getEmployees'])\n  },\n  methods: {\n    ...mapActions('simulatorStore', ['SIMULATOR_LOGIN']),\n    logger() {\n      const empCode = this.empCode;\n      const checkIn = this.checkIn;\n      const checkOut = this.checkOut;\n      const data = {\n        empCode,\n        inTime: checkIn,\n        outTime: checkOut\n      };\n      console.log(data);\n      // this.$bvToast.toast(\"data is added\", {\n      //     title: 'Error',\n      //     variant: 'danger',\n      //     solid: true,\n      //     delay:2000\n      //   })\n      this.clearFields();\n      this.SIMULATOR_LOGIN({\n        success: this.handlesuccessLogin,\n        fail: this.handlefailLogin,\n        data: data\n      });\n    },\n    clearFields() {\n      this.empCode = \"\";\n      this.checkIn = new Date();\n      this.checkOut = new Date();\n    },\n    handlesuccessLogin(data) {\n      this.clearFields();\n      alert(resdata);\n    },\n    handlefailLogin(err) {\n      this.clearFields();\n      console.log(err.response.data);\n      alert(err.response.data);\n    }\n  }\n};","map":{"version":3,"names":["authService","mapActions","mapGetters","name","data","empCode","checkIn","Date","checkOut","setEmpcode","mounted","getEmployees","success","console","log","fail","err","computed","methods","logger","inTime","outTime","clearFields","SIMULATOR_LOGIN","handlesuccessLogin","handlefailLogin","alert","resdata","response"],"sources":["/Users/jaisri/Downloads/attendance-portal-master/src/pages/js/simulator.js"],"sourcesContent":["import authService from \"@/serviceLayer/authService\";\nimport { mapActions, mapGetters } from \"vuex\"\n\n\n\nexport default{\n    name:'Simulator',\n    data(){\n        return {\n            empCode:\"\",\n            checkIn:new Date(),\n            checkOut:new Date(),\n            setEmpcode:[]\n        }\n    },\n    mounted(){\n        authService.getEmployees({success:(data)=>{\n                console.log(data);\n                this.setEmpcode=data;\n        },\n        fail:(err)=>{\n            console.log(err)\n        }})\n    },\n    computed:{\n        ...mapGetters('simulatorStore',['getEmployees'])\n    },\n    methods:{\n        ...mapActions('simulatorStore',['SIMULATOR_LOGIN']),\n            logger()\n            {\n                const empCode=this.empCode;\n                const checkIn=this.checkIn;\n                const checkOut=this.checkOut;\n                const data={empCode,inTime:checkIn,outTime:checkOut}\n                console.log(data)\n                // this.$bvToast.toast(\"data is added\", {\n                //     title: 'Error',\n                //     variant: 'danger',\n                //     solid: true,\n                //     delay:2000\n                //   })\n                this.clearFields();\n                this.SIMULATOR_LOGIN({\n                    success:this.handlesuccessLogin,\n                    fail:this.handlefailLogin,\n                    data:data\n                })   \n            },\n            clearFields(){\n                this.empCode=\"\";\n                this.checkIn=new Date();\n                this.checkOut=new Date();\n            },\n            handlesuccessLogin(data){\n                this.clearFields();\n                alert(resdata)\n            },\n            handlefailLogin(err)\n            {\n                this.clearFields();\n                console.log(err.response.data);\n                alert(err.response.data);\n            }\n    }\n}"],"mappings":"AAAA,OAAOA,WAAW,MAAM,4BAA4B;AACpD,SAASC,UAAU,EAAEC,UAAU,QAAQ,MAAM;AAI7C,eAAc;EACVC,IAAI,EAAC,WAAW;EAChBC,IAAI,GAAE;IACF,OAAO;MACHC,OAAO,EAAC,EAAE;MACVC,OAAO,EAAC,IAAIC,IAAI,EAAE;MAClBC,QAAQ,EAAC,IAAID,IAAI,EAAE;MACnBE,UAAU,EAAC;IACf,CAAC;EACL,CAAC;EACDC,OAAO,GAAE;IACLV,WAAW,CAACW,YAAY,CAAC;MAACC,OAAO,EAAER,IAAI,IAAG;QAClCS,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;QACjB,IAAI,CAACK,UAAU,GAACL,IAAI;MAC5B,CAAC;MACDW,IAAI,EAAEC,GAAG,IAAG;QACRH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACpB;IAAC,CAAC,CAAC;EACP,CAAC;EACDC,QAAQ,EAAC;IACL,GAAGf,UAAU,CAAC,gBAAgB,EAAC,CAAC,cAAc,CAAC;EACnD,CAAC;EACDgB,OAAO,EAAC;IACJ,GAAGjB,UAAU,CAAC,gBAAgB,EAAC,CAAC,iBAAiB,CAAC,CAAC;IAC/CkB,MAAM,GACN;MACI,MAAMd,OAAO,GAAC,IAAI,CAACA,OAAO;MAC1B,MAAMC,OAAO,GAAC,IAAI,CAACA,OAAO;MAC1B,MAAME,QAAQ,GAAC,IAAI,CAACA,QAAQ;MAC5B,MAAMJ,IAAI,GAAC;QAACC,OAAO;QAACe,MAAM,EAACd,OAAO;QAACe,OAAO,EAACb;MAAQ,CAAC;MACpDK,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;MACjB;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAACkB,WAAW,EAAE;MAClB,IAAI,CAACC,eAAe,CAAC;QACjBX,OAAO,EAAC,IAAI,CAACY,kBAAkB;QAC/BT,IAAI,EAAC,IAAI,CAACU,eAAe;QACzBrB,IAAI,EAACA;MACT,CAAC,CAAC;IACN,CAAC;IACDkB,WAAW,GAAE;MACT,IAAI,CAACjB,OAAO,GAAC,EAAE;MACf,IAAI,CAACC,OAAO,GAAC,IAAIC,IAAI,EAAE;MACvB,IAAI,CAACC,QAAQ,GAAC,IAAID,IAAI,EAAE;IAC5B,CAAC;IACDiB,kBAAkB,CAACpB,IAAI,EAAC;MACpB,IAAI,CAACkB,WAAW,EAAE;MAClBI,KAAK,CAACC,OAAO,CAAC;IAClB,CAAC;IACDF,eAAe,CAACT,GAAG,EACnB;MACI,IAAI,CAACM,WAAW,EAAE;MAClBT,OAAO,CAACC,GAAG,CAACE,GAAG,CAACY,QAAQ,CAACxB,IAAI,CAAC;MAC9BsB,KAAK,CAACV,GAAG,CAACY,QAAQ,CAACxB,IAAI,CAAC;IAC5B;EACR;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}