{"ast":null,"code":"const mockapi = true;\n// import timeSheetService from '@/serviceLayer/timeSheetService';\nimport employees from './mockauth';\nconst empStore = {\n  state: {\n    employee: {},\n    employees,\n    data: {}\n  },\n  mutations: {\n    setEmployee(state, employee) {\n      localStorage.setItem('employee', JSON.stringify(employee));\n      state.employee = employee;\n    },\n    deleteEmp(state) {\n      localStorage.removeItem('employee');\n      state.employee = \"\";\n    },\n    setdata(state, data) {\n      console.log(data);\n      state.data = data;\n    }\n  },\n  actions: {\n    SET_EMPLOYEE({\n      commit\n    }, {\n      success,\n      fail,\n      data\n    }) {\n      const {\n        empCode\n      } = data;\n      let authemp;\n      if (mockapi) {\n        authemp = employees.findIndex(emp => {\n          return emp.empCode === empCode;\n        });\n        commit(\"setEmployee\", employees[authemp]);\n        success(employees[authemp]);\n      } else {\n        fail(\"error\");\n      }\n    },\n    DELETE_EMPLOYEE({\n      commit\n    }) {\n      commit(\"deleteEmp\");\n    }\n  },\n  getters: {\n    getEmployee(state) {\n      return state.employee;\n    },\n    getchecks(state) {\n      return state.data;\n    }\n  },\n  namespaced: true\n};\nexport default empStore;","map":{"version":3,"names":["mockapi","employees","empStore","state","employee","data","mutations","setEmployee","localStorage","setItem","JSON","stringify","deleteEmp","removeItem","setdata","console","log","actions","SET_EMPLOYEE","commit","success","fail","empCode","authemp","findIndex","emp","DELETE_EMPLOYEE","getters","getEmployee","getchecks","namespaced"],"sources":["/Users/jaisri/Downloads/attendance-portal-master/src/store/empStore.js"],"sourcesContent":["const mockapi=true;\n// import timeSheetService from '@/serviceLayer/timeSheetService';\nimport employees from './mockauth';\n\nconst empStore={\n    state:{\n        employee:{},\n       employees,\n       data:{}\n    },\n    \n    mutations:{\n    setEmployee(state,employee)\n    {\n        localStorage.setItem('employee',JSON.stringify(employee));\n        state.employee=employee;\n    },\n    deleteEmp(state)\n    {\n        localStorage.removeItem('employee');\n        state.employee=\"\";\n    },\n    setdata(state,data)\n    {\n        console.log(data)\n        state.data=data;\n    }\n    },\n\n    actions:{\n\n        SET_EMPLOYEE({commit},{success,fail,data}){\n            const {empCode}=data;\n            let authemp;\n            if(mockapi){\n                authemp=employees.findIndex((emp)=>{\n                    return emp.empCode=== empCode\n                });\n                commit(\"setEmployee\",employees[authemp]);\n                success(employees[authemp]);    \n            }\n            else{\n                fail(\"error\");\n            }\n          },\n\n         DELETE_EMPLOYEE({commit}){\n              commit(\"deleteEmp\");\n          },\n    },\n\n    getters:{\n        getEmployee(state){\n            return state.employee;\n        },\n        getchecks(state)\n        {\n            return state.data;\n        }\n    },\n\n    namespaced:true\n}\n\nexport default empStore;"],"mappings":"AAAA,MAAMA,OAAO,GAAC,IAAI;AAClB;AACA,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,QAAQ,GAAC;EACXC,KAAK,EAAC;IACFC,QAAQ,EAAC,CAAC,CAAC;IACZH,SAAS;IACTI,IAAI,EAAC,CAAC;EACT,CAAC;EAEDC,SAAS,EAAC;IACVC,WAAW,CAACJ,KAAK,EAACC,QAAQ,EAC1B;MACII,YAAY,CAACC,OAAO,CAAC,UAAU,EAACC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAAC,CAAC;MACzDD,KAAK,CAACC,QAAQ,GAACA,QAAQ;IAC3B,CAAC;IACDQ,SAAS,CAACT,KAAK,EACf;MACIK,YAAY,CAACK,UAAU,CAAC,UAAU,CAAC;MACnCV,KAAK,CAACC,QAAQ,GAAC,EAAE;IACrB,CAAC;IACDU,OAAO,CAACX,KAAK,EAACE,IAAI,EAClB;MACIU,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;MACjBF,KAAK,CAACE,IAAI,GAACA,IAAI;IACnB;EACA,CAAC;EAEDY,OAAO,EAAC;IAEJC,YAAY,CAAC;MAACC;IAAM,CAAC,EAAC;MAACC,OAAO;MAACC,IAAI;MAAChB;IAAI,CAAC,EAAC;MACtC,MAAM;QAACiB;MAAO,CAAC,GAACjB,IAAI;MACpB,IAAIkB,OAAO;MACX,IAAGvB,OAAO,EAAC;QACPuB,OAAO,GAACtB,SAAS,CAACuB,SAAS,CAAEC,GAAG,IAAG;UAC/B,OAAOA,GAAG,CAACH,OAAO,KAAIA,OAAO;QACjC,CAAC,CAAC;QACFH,MAAM,CAAC,aAAa,EAAClB,SAAS,CAACsB,OAAO,CAAC,CAAC;QACxCH,OAAO,CAACnB,SAAS,CAACsB,OAAO,CAAC,CAAC;MAC/B,CAAC,MACG;QACAF,IAAI,CAAC,OAAO,CAAC;MACjB;IACF,CAAC;IAEFK,eAAe,CAAC;MAACP;IAAM,CAAC,EAAC;MACpBA,MAAM,CAAC,WAAW,CAAC;IACvB;EACN,CAAC;EAEDQ,OAAO,EAAC;IACJC,WAAW,CAACzB,KAAK,EAAC;MACd,OAAOA,KAAK,CAACC,QAAQ;IACzB,CAAC;IACDyB,SAAS,CAAC1B,KAAK,EACf;MACI,OAAOA,KAAK,CAACE,IAAI;IACrB;EACJ,CAAC;EAEDyB,UAAU,EAAC;AACf,CAAC;AAED,eAAe5B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}